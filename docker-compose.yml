version: '3'

services:
  authentication:
    build:
      context: ./authentication
    hostname: authentication-service
    container_name: authentication-service
    ports:
      - "3000:3000"
    depends_on:
      - mongoDB
      - traefik
    env_file:
      - .env
    stdin_open: true
    tty: true
    labels:
     - "traefik.http.routers.authentication.rule=Host(`authentication.localhost`)"
    networks:
      - microservices_network
      - mongodb_network  # À supprimer une fois MySQL installé et fonctionnel
#      - mysql_network

  restaurant:
    build:
      context: ./restaurant
    hostname: restaurant-service
    container_name: restaurant-service
    ports:
      - "3002:3002"
    depends_on:
      - mongoDB
      - traefik
    env_file:
      - .env
    stdin_open: true
    tty: true
    labels:
      - "traefik.http.routers.restaurant.rule=Host(`restaurant.localhost`)"
    networks:
      - microservices_network
      - mongodb_network

  monitoring:
    build:
      context: ./monitoring
    hostname: monitoring-service
    container_name: monitoring-service
    ports:
      - "3007:3007"
    depends_on:
      - authentication
      - restaurant
      - product
      - traefik
    env_file:
      - .env
    stdin_open: true
    tty: true
    labels:
     - "traefik.http.routers.monitoring.rule=Host(`monitoring.localhost`)"
    networks:
      - microservices_network
      - mongodb_network

  product:
    build:
      context: ./product
    hostname: product-service
    container_name: product-service
    ports:
      - "3004:3004"
    depends_on:
      - mongoDB
      - traefik
    env_file:
      - .env
    stdin_open: true
    tty: true
    labels:
      - "traefik.http.routers.product.rule=Host(`product.localhost`)"
    networks:
      - microservices_network
      - mongodb_network

  users:
    build:
      context: ./users
    hostname: users-service
    container_name: users-service
    ports:
      - "3001:3001"
    depends_on:
      - mysql
      - traefik
    env_file:
      - .env
    stdin_open: true
    tty: true
    labels:
      - "traefik.http.routers.users.rule=Host(`users.localhost`)"
    networks:
      - microservices_network
      - mysql_network

  mongoDB:
    image: mongo
    container_name: mongoDB
    ports:
      - "27017:27017"
    volumes:
      - ./volumes/mongodb:/data/database
    depends_on:
      - traefik
    labels:
     - "traefik.http.routers.mongo.rule=Host(`mongo.localhost`)"
    networks:
      - mongodb_network
      - microservices_network

  traefik:
    image: traefik:v3.0
    container_name: traefik
    command: --api.insecure=true --providers.docker
    ports:
      - 80:80
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  microservices_network:
    driver: bridge
  mongodb_network:
    driver: bridge
#  mysql_network:
#    driver: bridge

volumes:
  mongodb: