name: CI Pipelines

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  authentication_config:
    name: üõ† üî® Setup Authentication Version
    runs-on: ubuntu-latest
    outputs:
      APP_VERSION: ${{ steps.config.outputs.APP_VERSION }}
      APP_NAME: ${{ steps.config.outputs.APP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup version
        id: config
        run: |
          APP_NAME=$(node -p "require('./authentication/package.json').name")
          APP_VERSION=$(node -p "require('./authentication/package.json').version")
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "app_name = $APP_NAME"
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "app_version = $APP_VERSION"

  authentication_docker:
    name: üêã ‚òÅÔ∏è Build Authentication Service
    runs-on: ubuntu-latest
    needs: [authentication_config]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.authentication_config.outputs.APP_NAME }}:${{ needs.authentication_config.outputs.APP_VERSION }} ./authentication
        env:
          DOCKER_BUILDKIT: 1
      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.authentication_config.outputs.APP_NAME }}:${{ needs.authentication_config.outputs.APP_VERSION }}

  monitoring_config:
    name: üõ† üî® Setup Monitoring Version
    runs-on: ubuntu-latest
    needs: [authentication_docker]
    outputs:
      APP_VERSION: ${{ steps.config.outputs.APP_VERSION }}
      APP_NAME: ${{ steps.config.outputs.APP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup version
        id: config
        run: |
          APP_NAME=$(node -p "require('./monitoring/package.json').name")
          APP_VERSION=$(node -p "require('./monitoring/package.json').version")
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "app_name = $APP_NAME"
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "app_version = $APP_VERSION"

  monitoring_docker:
    name: üêã ‚òÅÔ∏è Build Monitoring Service
    runs-on: ubuntu-latest
    needs: [monitoring_config]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.monitoring_config.outputs.APP_NAME }}:${{ needs.monitoring_config.outputs.APP_VERSION }} ./monitoring
        env:
          DOCKER_BUILDKIT: 1
      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.monitoring_config.outputs.APP_NAME }}:${{ needs.monitoring_config.outputs.APP_VERSION }}

  restaurant_config:
    name: üõ† üî® Setup Restaurant Version
    runs-on: ubuntu-latest
    needs: [monitoring_docker]
    outputs:
      APP_VERSION: ${{ steps.config.outputs.APP_VERSION }}
      APP_NAME: ${{ steps.config.outputs.APP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup version
        id: config
        run: |
          APP_NAME=$(node -p "require('./restaurant/package.json').name")
          APP_VERSION=$(node -p "require('./restaurant/package.json').version")
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "app_name = $APP_NAME"
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "app_version = $APP_VERSION"
      
  restaurant_docker:
    name: üêã ‚òÅÔ∏è Build Restaurant Service
    runs-on: ubuntu-latest
    needs: [restaurant_config]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.restaurant_config.outputs.APP_NAME }}:${{ needs.restaurant_config.outputs.APP_VERSION }} ./restaurant
        env:
          DOCKER_BUILDKIT: 1
      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.restaurant_config.outputs.APP_NAME }}:${{ needs.restaurant_config.outputs.APP_VERSION }}

  product_config:
    name: üõ† üî® Setup Product Version
    runs-on: ubuntu-latest
    needs: [restaurant_docker]
    outputs:
      APP_VERSION: ${{ steps.config.outputs.APP_VERSION }}
      APP_NAME: ${{ steps.config.outputs.APP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup version
        id: config
        run: |
          APP_NAME=$(node -p "require('./product/package.json').name")
          APP_VERSION=$(node -p "require('./product/package.json').version")
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          echo "app_name = $APP_NAME"
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "app_version = $APP_VERSION"
      
  product_docker:
    name: üêã ‚òÅÔ∏è Build Product Service
    runs-on: ubuntu-latest
    needs: [product_config]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.product_config.outputs.APP_NAME }}:${{ needs.product_config.outputs.APP_VERSION }} ./product
        env:
          DOCKER_BUILDKIT: 1
      - name: Push image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.product_config.outputs.APP_NAME }}:${{ needs.product_config.outputs.APP_VERSION }}